//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Icarus.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ICARUSDBEntities : DbContext
    {
        public ICARUSDBEntities()
            : base("name=ICARUSDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAdmission> tblAdmissions { get; set; }
        public virtual DbSet<tblAdmissionAttachment> tblAdmissionAttachments { get; set; }
        public virtual DbSet<tblAdmissionAttachmentType> tblAdmissionAttachmentTypes { get; set; }
        public virtual DbSet<tblAdmissionBilling> tblAdmissionBillings { get; set; }
        public virtual DbSet<tblAdmissionCommLog> tblAdmissionCommLogs { get; set; }
        public virtual DbSet<tblAdmissionVitalSign> tblAdmissionVitalSigns { get; set; }
        public virtual DbSet<tblAssertion> tblAssertions { get; set; }
        public virtual DbSet<tblAssertionCategory> tblAssertionCategories { get; set; }
        public virtual DbSet<tblAttachment> tblAttachments { get; set; }
        public virtual DbSet<tblCashAdvance> tblCashAdvances { get; set; }
        public virtual DbSet<tblCashAdvancePayment> tblCashAdvancePayments { get; set; }
        public virtual DbSet<tblCodepUpdate> tblCodepUpdates { get; set; }
        public virtual DbSet<tblExpens> tblExpenses { get; set; }
        public virtual DbSet<tblExpensesChartOfAccount> tblExpensesChartOfAccounts { get; set; }
        public virtual DbSet<tblExpensesForAssertion> tblExpensesForAssertions { get; set; }
        public virtual DbSet<tblFacilityReport> tblFacilityReports { get; set; }
        public virtual DbSet<tblGroup> tblGroups { get; set; }
        public virtual DbSet<tblGroupMember> tblGroupMembers { get; set; }
        public virtual DbSet<tblGroupRight> tblGroupRights { get; set; }
        public virtual DbSet<tblInquiry> tblInquiries { get; set; }
        public virtual DbSet<tblInquiryCommLog> tblInquiryCommLogs { get; set; }
        public virtual DbSet<tblInquiryStatu> tblInquiryStatus { get; set; }
        public virtual DbSet<tblPayment> tblPayments { get; set; }
        public virtual DbSet<tblPaymentMethod> tblPaymentMethods { get; set; }
        public virtual DbSet<tblRank> tblRanks { get; set; }
        public virtual DbSet<tblRequest> tblRequests { get; set; }
        public virtual DbSet<tblRequestStatu> tblRequestStatus { get; set; }
        public virtual DbSet<tblResident> tblResidents { get; set; }
        public virtual DbSet<tblResidentActivity> tblResidentActivities { get; set; }
        public virtual DbSet<tblRight> tblRights { get; set; }
        public virtual DbSet<tblStaff> tblStaffs { get; set; }
        public virtual DbSet<tblVendor> tblVendors { get; set; }
        public virtual DbSet<vAdmissionBrowse> vAdmissionBrowses { get; set; }
        public virtual DbSet<vCashAdvanceBrowse> vCashAdvanceBrowses { get; set; }
        public virtual DbSet<vCashAdvancePaymentBrowse> vCashAdvancePaymentBrowses { get; set; }
        public virtual DbSet<vExpensesBrowse> vExpensesBrowses { get; set; }
        public virtual DbSet<vPaymentBrowse> vPaymentBrowses { get; set; }
        public virtual DbSet<vResidentActivityBrowse> vResidentActivityBrowses { get; set; }
        public virtual DbSet<vrptAssertionSummary> vrptAssertionSummaries { get; set; }
        public virtual DbSet<vrptCollectible> vrptCollectibles { get; set; }
        public virtual DbSet<vrptExpens> vrptExpenses { get; set; }
        public virtual DbSet<vrptPayment> vrptPayments { get; set; }
        public virtual DbSet<vrptUnderChargedExpens> vrptUnderChargedExpenses { get; set; }
        public virtual DbSet<vRSCodepUpdate> vRSCodepUpdates { get; set; }
        public virtual DbSet<vRSCollectible> vRSCollectibles { get; set; }
        public virtual DbSet<vRSExpensesDaily> vRSExpensesDailies { get; set; }
        public virtual DbSet<vselCodepUpdateBrowse> vselCodepUpdateBrowses { get; set; }
    
        public virtual int spBackup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBackup");
        }
    
        public virtual int spBackupCloud()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBackupCloud");
        }
    
        public virtual int spCalculateExpensesChargedToCodep(Nullable<int> iDExpense, Nullable<int> iDChargeToCodep)
        {
            var iDExpenseParameter = iDExpense.HasValue ?
                new ObjectParameter("IDExpense", iDExpense) :
                new ObjectParameter("IDExpense", typeof(int));
    
            var iDChargeToCodepParameter = iDChargeToCodep.HasValue ?
                new ObjectParameter("IDChargeToCodep", iDChargeToCodep) :
                new ObjectParameter("IDChargeToCodep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCalculateExpensesChargedToCodep", iDExpenseParameter, iDChargeToCodepParameter);
        }
    
        public virtual int spGenerateTreatmentFee(Nullable<int> iDAdmission)
        {
            var iDAdmissionParameter = iDAdmission.HasValue ?
                new ObjectParameter("IDAdmission", iDAdmission) :
                new ObjectParameter("IDAdmission", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGenerateTreatmentFee", iDAdmissionParameter);
        }
    
        public virtual int spJobGenerateTreatmentFee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spJobGenerateTreatmentFee");
        }
    
        public virtual int spRecalcAdmissionBalance(Nullable<int> iDAdmission)
        {
            var iDAdmissionParameter = iDAdmission.HasValue ?
                new ObjectParameter("IDAdmission", iDAdmission) :
                new ObjectParameter("IDAdmission", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRecalcAdmissionBalance", iDAdmissionParameter);
        }
    
        public virtual int spSendNotification(string profilename, string recipients, string subject, string body, string bodyformat)
        {
            var profilenameParameter = profilename != null ?
                new ObjectParameter("profilename", profilename) :
                new ObjectParameter("profilename", typeof(string));
    
            var recipientsParameter = recipients != null ?
                new ObjectParameter("recipients", recipients) :
                new ObjectParameter("recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("body", body) :
                new ObjectParameter("body", typeof(string));
    
            var bodyformatParameter = bodyformat != null ?
                new ObjectParameter("Bodyformat", bodyformat) :
                new ObjectParameter("Bodyformat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSendNotification", profilenameParameter, recipientsParameter, subjectParameter, bodyParameter, bodyformatParameter);
        }
    
        public virtual int spSendReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSendReport");
        }
    
        public virtual int spSendReportCodepUpdates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSendReportCodepUpdates");
        }
    
        public virtual int spSendReportCollectibles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSendReportCollectibles");
        }
    
        public virtual int spSendReportExpensesDaily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSendReportExpensesDaily");
        }
    
        public virtual int spSendReportRecentPayments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSendReportRecentPayments");
        }
    }
}
